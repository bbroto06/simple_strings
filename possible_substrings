/*
Write a program that accepts, as input from the user, a string. 
The string should NOT contain any numerals or special characters; in other words, alphabets only. 
Also, the string should not have any spaces and should be no less than 2 characters and 
no more than 6 characters.
The output should be every possible substring listed in alphabetical order. 
*/
#include <iostream>
#include <string>
#include <algorithm>
#include <vector>
using namespace std;

void print_all_substrings_iterative(string str)
{
	std::vector<string> strvector;
	int k;
	string temp="";
    const size_t size = str.size();
    for (size_t i=1; i<std::pow(2.0, (double)size); ++i) {
        for (size_t j=0; j<size; ++j) {
            if (i & (1 << j)) 
                temp = temp + str[j];
        }
        strvector.push_back (temp);
        temp = "";
    }
    sort(strvector.begin(), strvector.end());
	for (k=0; k<strvector.size(); ++k) 
		cout << strvector[k] << ' ';
    std::cout << std::endl;
}

int main() {
	string input, sortedWord;
	int i, val, len, flag;
	cin>>input;
	len = input.length();
	if(len>=2 && len<=6){
		for(i=0; i<len; i++){
			val = input.at(i);
			if ( (val>=65 && val<=90) || (val>=97 && val<=122) )
				flag = 0;
			else{
				cout<<"\nERROR : Invalid String";
				flag = 1;
				break;
			}
		}
		if(flag == 0){
			sortedWord = input;
			print_all_substrings_iterative(sortedWord);
		}
	}
	else
		cout<<"\nERROR : Invalid String";
	return 0;
}
